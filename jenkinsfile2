node {
   def mvnHome
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/yu-shao-gm/helloworld-html5-i18n.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool("mvn")
      
   }
   stage('Pulling Translation From Zanata') {
      // Run the maven build
      if (isUnix()) {
        sh "export PATH=$ZANATA_CLI_HOME/bin:$PATH; find . -type f -not -path '*/target/*' -name 'zanata.xml' -execdir pwd \\; -execdir ls \\; -execdir echo 'Running zanata-cli -B stats ' \\; -execdir zanata-cli -B stats --disable-ssl-cert \\;  -execdir echo 'Running zanata-cli -B push' \\;  -execdir zanata-cli -B push --disable-ssl-cert \\;  -execdir echo 'Running zanata-cli -B pull' \\; -execdir zanata-cli -B pull --disable-ssl-cert \\;"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Pushing Zanata Translation to Git') {
      // Run the maven build
      if (isUnix()) {
         sh('git config --global user.email yu.shao.gm@gmail.com')
         sh('git config --global user.name yu.shao.gm@gmail.com')
         sh('git config --global push.default matching')
         sh "export PATH=$ZANATA_CLI_HOME/bin:$PATH; find . -type f -not -path '*/target/*' -name 'zanata.xml' -execdir echo '=== Commiting new translation...' \\; -execdir pwd \\; -execdir ls \\; -execdir echo '=== Git add...' \\; -execdir git add . \\; -execdir echo '=== Git commit ...' \\; -execdir git commit -m \"$BUILD_TAG\" \\; -execdir echo '=== Finished commit prepration.' \\;"
         
           withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'adad9eaf-8119-4a74-a447-050d326f7f71', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {

            sh("git config credential.username ${env.GIT_USERNAME}")
            sh("git config credential.helper '!echo password=\$GIT_PASSWORD; echo'")
            sh('GIT_ASKPASS=true git push https://github.com/yu-shao-gm/helloworld-html5-i18n.git')
                                                                
         }
         } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Results') {
      archive 'target/*.jar'
   }
   stage('Build and Deploy to OpenShift') {
       openshiftBuild(buildConfig: 'i18n-demo', showBuildLogs: 'true')
       openshiftDeploy(deploymentConfig: 'i18n-demo')
   }
       
   }
