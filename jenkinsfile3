node {
   def mvnHome
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/yu-shao-gm/helloworld-html5-i18n.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool("mvn")
      
   }
   stage('Pulling Translation From Zanata') {
      // Run the maven build
      if (isUnix()) {
        step([$class: 'ZanataBuilder', projFile: 'zanata.xml', syncZ2git: false, syncG2zanata: true])
        
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Pushing Zanata Translation to Git') {
      // Run the maven build
      if (isUnix()) {
         
         withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'adad9eaf-8119-4a74-a447-050d326f7f71', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
            sh("git config credential.username ${env.GIT_USERNAME}")
            sh("git config credential.helper '!echo password=\$GIT_PASSWORD; echo'")
            step([$class: 'ZanataBuilder', projFile: 'zanata.xml', syncZ2git: true, syncG2zanata: false])
            sh('GIT_ASKPASS=true git push')
         }
         } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Results') {
      archive 'target/*.jar'
   }
   stage('Build and Deploy to OpenShift') {
       openshiftBuild(buildConfig: 'i18n-demo', showBuildLogs: 'true')
       openshiftDeploy(deploymentConfig: 'i18n-demo')
   }
       
   }
